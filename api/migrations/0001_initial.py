# Generated by Django 3.1.4 on 2020-12-12 05:43

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('course_name', models.CharField(max_length=255)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prerequisites', to='api.course')),
            ],
            options={
                'ordering': ['course_id'],
            },
        ),
        migrations.CreateModel(
            name='Offering',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offering_no', models.PositiveIntegerField()),
                ('no_of_students', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(500)])),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offerings', to='api.course')),
            ],
            options={
                'ordering': ['offering_no'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('sin', models.PositiveIntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(100000000), django.core.validators.MaxValueValidator(999999999)])),
                ('name', models.CharField(max_length=255)),
                ('gender', models.CharField(max_length=1)),
                ('id', models.PositiveIntegerField(unique=True)),
                ('password', models.CharField(max_length=50)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_api.person_set+', to='contenttypes.contenttype')),
            ],
            options={
                'ordering': ['sin'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('room_no', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('max_capacity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(500)])),
            ],
            options={
                'ordering': ['room_no'],
            },
        ),
        migrations.CreateModel(
            name='Textbook',
            fields=[
                ('isbn', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(1000000000), django.core.validators.MaxValueValidator(9999999999)])),
                ('book_no', models.PositiveIntegerField()),
                ('title', models.CharField(max_length=255)),
                ('year', models.IntegerField()),
                ('edition', models.PositiveIntegerField()),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='required_textbooks', to='api.course')),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.person')),
                ('position_title', models.CharField(max_length=255)),
                ('salary', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('hired_year', models.PositiveIntegerField(editable=False)),
                ('hired_date', models.PositiveIntegerField(editable=False)),
                ('hired_month', models.CharField(editable=False, max_length=9)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('api.person',),
        ),
        migrations.CreateModel(
            name='Counselor',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.person')),
                ('salary', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('hired_year', models.PositiveIntegerField(editable=False)),
                ('hired_date', models.PositiveIntegerField(editable=False)),
                ('hired_month', models.CharField(editable=False, max_length=9)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('api.person',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.person')),
                ('year', models.PositiveSmallIntegerField()),
                ('grade_average', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200)])),
                ('credits_received', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('api.person',),
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.person')),
                ('salary', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('hired_year', models.PositiveIntegerField(editable=False)),
                ('hired_date', models.PositiveIntegerField(editable=False)),
                ('hired_month', models.CharField(editable=False, max_length=9)),
                ('can_teach', models.ManyToManyField(blank=True, to='api.Course')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('api.person',),
        ),
        migrations.CreateModel(
            name='TextbookAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=255)),
                ('textbook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authors', to='api.textbook')),
            ],
        ),
        migrations.CreateModel(
            name='OfferingDayAndTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(max_length=9)),
                ('hour_from', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23)])),
                ('hour_to', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23)])),
                ('offering', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='times', to='api.offering')),
            ],
        ),
        migrations.AddField(
            model_name='offering',
            name='room',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='timeslots', to='api.room'),
        ),
        migrations.AddField(
            model_name='textbook',
            name='student',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='signed_out_textbooks', to='api.student'),
        ),
        migrations.CreateModel(
            name='TeacherOfficeHour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(max_length=9)),
                ('hour_from', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23)])),
                ('hour_to', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23)])),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='officehours', to='api.teacher')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='offering',
            unique_together={('course', 'offering_no')},
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material_no', models.PositiveIntegerField(editable=False)),
                ('name', models.CharField(max_length=255)),
                ('upload_date', models.DateField(auto_now_add=True)),
                ('category', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('offering', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='api.offering')),
            ],
            options={
                'unique_together': {('offering', 'material_no')},
            },
        ),
        migrations.CreateModel(
            name='CounselorOfficeHour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(max_length=9)),
                ('hour_from', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23)])),
                ('hour_to', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23)])),
                ('counselor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='officehours', to='api.counselor')),
            ],
        ),
        migrations.AddField(
            model_name='counselor',
            name='counsels',
            field=models.ManyToManyField(blank=True, to='api.Student'),
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assign_no', models.PositiveIntegerField(editable=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('offering', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='api.offering')),
            ],
            options={
                'unique_together': {('offering', 'assign_no')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='textbook',
            unique_together={('isbn', 'book_no')},
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(max_length=255)),
                ('grade', models.CharField(blank=True, max_length=2, null=True)),
                ('offering', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.offering')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.student')),
            ],
            options={
                'unique_together': {('offering', 'student')},
            },
        ),
    ]
